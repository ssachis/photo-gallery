class parallaxTiltEffect {
	constructor({element, titltEffect}) {
		this.element = element;
		this.container = this.element.querySelector(".container");
		this.size = [300, 360];
		[this.w, this.h] = this.size;

		this.titltEffect = titltEffect;

		this.mouseOnComponent = false;

		this.handleMouseMove = this.handleMouseMove.bind(this);
		this.handleMouseEnter = this.handleMouseEnter.bind(this);
		this.handleMouseLeave = this.handleMouseLeave.bind(this);

		this.defaultStates = this.defaultStates.bind(this);
		this.setProperty = this.setProperty.bind(this);
		this.init = this.init.bind(this);

		this.init();
	}

	handleMouseMove(event) {
		const {offsetX, offsetY} = event;

		let X;
		let Y;

		if (this.titltEffect === "reverse") {
			X = ((offsetX - (this.w/2)) / 2) / 2;
			Y = (-(offsetY - (this.h/2)) / 2) / 2;

		}

		else if (this.titltEffect === "normal") {
			X = (-(offsetX - (this.w/2)) / 2) / 2;
			Y = ((offsetY - (this.h/2)) / 2) / 2;
		}

		this.setProperty("--rY", X.toFixed(2));
		this.setProperty("--rX", Y.toFixed(2));

		this.setProperty("--bY", (80 - (X/4).toFixed(2)) + "%");
		this.setProperty("--bX", (50 - (Y/4).toFixed(2)) + "%");
	}

	handleMouseEnter() {
		this.mouseOnComponent = true;
		this.container.classList.add("container-active");
	}

	handleMouseLeave() {
		this.mouseOnComponent = false;
		this.defaultStates();
	}

	defaultStates() {
		this.container.classList.remove("container-active");
		this.setProperty("--rY", 0);
		this.setProperty("--rX", 0);
		this.setProperty("--bY", "80%");
		this.setProperty("--bX", "50%");
	}

	setProperty(p, v) {
		return this.container.style.setProperty(p, v);
	}

	init() {
		this.element.addEventListener("mousemove", this.handleMouseMove);
		this.element.addEventListener("mouseenter", this.handleMouseEnter);
		this.element.addEventListener("mouseleave", this.handleMouseLeave);
	}
}

const $ = e => document.querySelector(e);

const wrap1 = new parallaxTiltEffect({
	element: $(".wrap-1"),
	titltEffect: "reverse"
});

const wrap2 = new parallaxTiltEffect({
	element: $(".wrap-2"),
	titltEffect: "normal"
});

const wrap3 = new parallaxTiltEffect({
	element: $(".wrap-3"),
	titltEffect: "reverse"
});

const wrap4 = new parallaxTiltEffect({
	element: $(".wrap-4"),
	titltEffect: "normal"
});

const wrap5 = new parallaxTiltEffect({
	element: $(".wrap-5"),
	titltEffect: "reverse"
});

const wrap6 = new parallaxTiltEffect({
	element: $(".wrap-6"),
	titltEffect: "normal"
});

const wrap7 = new parallaxTiltEffect({
	element: $(".wrap-7"),
	titltEffect: "reverse"
});

const wrap8 = new parallaxTiltEffect({
	element: $(".wrap-8"),
	titltEffect: "normal"
});

const wrap9 = new parallaxTiltEffect({
	element: $(".wrap-9"),
	titltEffect: "reverse"
});

const wrap11 = new parallaxTiltEffect({
	element: $(".wrap-11"),
	titltEffect: "reverse"
});
const wrap13 = new parallaxTiltEffect({
	element: $(".wrap-13"),
	titltEffect: "reverse"
});
const wrap15 = new parallaxTiltEffect({
	element: $(".wrap-15"),
	titltEffect: "reverse"
});
const wrap17 = new parallaxTiltEffect({
	element: $(".wrap-17"),
	titltEffect: "reverse"
});
const wrap19 = new parallaxTiltEffect({
	element: $(".wrap-19"),
	titltEffect: "reverse"
});

const wrap10 = new parallaxTiltEffect({
	element: $(".wrap-10"),
	titltEffect: "normal"
});
const wrap12 = new parallaxTiltEffect({
	element: $(".wrap-12"),
	titltEffect: "normal"
});
const wrap14 = new parallaxTiltEffect({
	element: $(".wrap-14"),
	titltEffect: "normal"
});
const wrap16 = new parallaxTiltEffect({
	element: $(".wrap-16"),
	titltEffect: "normal"
});
const wrap18 = new parallaxTiltEffect({
	element: $(".wrap-18"),
	titltEffect: "normal"
});
const wrap20 = new parallaxTiltEffect({
	element: $(".wrap-20"),
	titltEffect: "normal"
});


